/**问题描述
一只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法。
**/
/**解决方法：
若青蛙要跳上一个n级台阶，在跳上n级台阶的前一步有两种跳法。第一种跳一级就到了，则跳法为n-1级台阶的情况；第二种跳两级到达，则跳法为n-2级台阶的情况。其中
n=1时跳法为1，n=2时跳法为2。因此该问题实际上是一个菲波那切数列的问题，可用递归或循环（推荐）的方法。
**/
/*方法一*/
public class Solution {
    public int JumpFloor(int target) {
        if(target==1){
            return 1;
        }
        if(target==2){
            return 2;
        }
        return JumpFloor(target-1)+JumpFloor(target-2);
    }
}
/*方法二*/
public class Solution {
    public int JumpFloor(int target) {
       int [] result={1,2};
        if(target<3)
            return result[target-1];
        int a1=1;
        int a2=2;
        int an=0;
        for(int i=3;i<=target;i++){
            an=a1+a2;
            a1=a2;
            a2=an;
        }
        return an;
    }
}
