/**问题描述
*输入两个单调递增的链表，输出两个链表合成后的链表，当然我们需要合成后的链表满足单调不减规则。
**/
/**解决方法
*1.若list1的头节点的值小于list2的头结点值，则链表头部为list1，反之为list2。当list1为null时，返回list2；当list2为null时，返回list1。
*采用递归的方式
**/
/*
public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}*/
public class Solution {
    public ListNode Merge(ListNode list1,ListNode list2) {
        if(list1==null)
            return list2;
        if(list2==null)
            return list1;
        ListNode p=null;
        if(list1.val<list2.val){
            p=list1;
            p.next=Merge(list1.next,list2);
        }else{
            p=list2;
            p.next=Merge(list1,list2.next);
        }
        return p;
    }
}
