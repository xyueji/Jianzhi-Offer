/**问题描述
输入数字n,按顺序打印出从1到最大的n位十进制数。比如输入3，则打印出1,2,3一直到最大的3位数999。
**/
/*解决方法：
我们把数字的每一位都从0到9排列一遍，就得到了所有的十进制数。只是在打印的时候，排在前面的0不打印出来罢了。全排列用递归很容易表达，数字的每一位都可能是
0~9中的一个数，然后设置下一位。递归结束的条件是我们设置了数字的最后一位。
*/
public class Number{
	public static void oneToMax(int n){
		if(n<0)
			return;
		char[] number=new char[n];
		for(int i=0;i<10;i++){
			number[0]=(char)(i+'0');
			oneToMaxCircle(number,number.length,0);
		}
	}
	public static void oneToMaxCircle(char[] number,int length,int index){
		if(index==length-1){
			printNumber(number);
			return;
		}
		for(int i=0;i<10;i++){
			number[index+1]=(char)(i+'0');
			oneToMaxCircle(number,length,index+1);
		}
	}
	public static void printNumber(char[] number){
		boolean toBeMax=true;
		for(int i=0;i<number.length;i++){
			if(toBeMax&&number[i]!='0')
				toBeMax=false;
			if(!toBeMax)
				System.out.print(number[i]);
		}
		System.out.printf("\t");
	}
	public static void main(String[] args){
		oneToMax(3);
	}
}
 
